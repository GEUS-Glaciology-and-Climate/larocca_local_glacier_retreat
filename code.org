#+TITLE: Extracting data from the regional climate model MAR   
#+AUTHOR: Signe Hillerup Larsen
#+EMAIL: shl@geus.dk
#+DATE: {{{time(%Y-%m-%d)}}}
#+DESCRIPTION: Extract data from MAR using a shapefile with polygons
#+KEYWORDS:
#+OPTIONS:   H:4 num:4 toc:nil \n:nil ::t |:t ^:{} -:t f:t *:t <:t
#+EXCLUDE_TAGS: noexport
#+ARCHIVE: ::* Archive

#+PROPERTY: header-args :session *northgreenland-shell* :noweb yes 


* Code 

This code was developed to extract data from MAR for the sudy: 
Larocca et al (in review).  Greenland–wide accelerated retreat of land–based glaciers in the twenty–first century. 

*** python libraries

#+NAME: load_libraries
#+BEGIN_SRC ipython
import xarray as xr
import rioxarray 
import matplotlib.pyplot as plt
import pandas as pd
import geopandas as gpd
import rioxarray 
from shapely.geometry import mapping
import numpy as np
from datetime import datetime
from os import chdir
from glob import glob
import rasterstats as rs

#+END_SRC

#+RESULTS: load_libraries
:results:
# Out [20]: 
:end:





** MAR extraction



*** Extract data Also for Larocca
#+BEGIN_SRC ipython
<<load_libraries>>
#+END_SRC

#+RESULTS:
:results:
# Out [1]: 
:end:



**** Making annual means of the MAR data - this makes everything very much faster
#+BEGIN_SRC ipython :tangle make_annual_sum_files.py
<<load_libraries>>
marpath = '/media/shl/Elements1/data/MARv3.12/monthly_1km/'
for year in range(1950,2022):
    
    src_name = 'MARv3.12-monthly-ERA5-'+str(year)+'.nc'
    with xr.open_dataset(marpath+src_name,decode_times=False) as DS:
        annual = DS['RF'].sum(dim = 'time')
        annual.to_netcdf(marpath+'/annual/MARv3.12-annual_sum_RF_ERA5_'+str(year)+'.nc')
        annual = DS['SF'].sum(dim = 'time')
        annual.to_netcdf(marpath+'/annual/MARv3.12-annual_sum_SF_ERA5_'+str(year)+'.nc')
        annual = DS['T2Mcorr'].mean(dim = 'time')
        annual.to_netcdf(marpath+'/annual/MARv3.12-annual_mean_T2Mcorr_ERA5_'+str(year)+'.nc')
        annual = DS['RUcorr'].sum(dim = 'time')
        annual.to_netcdf(marpath+'/annual/MARv3.12-annual_sum_RUcorr_ERA5_'+str(year)+'.nc')
        annual = DS['SMBcorr'].sum(dim = 'time')
        annual.to_netcdf(marpath+'/annual/MARv3.12-annual_sum_SMBcorr_ERA5_'+str(year)+'.nc')
	
#+END_SRC

#+RESULTS:
:results:
# Out [3]: 
:end:

**** Then extract the annual sum for each year and all the polygons

#+BEGIN_SRC ipython :tangle extract_annual_mean.py
<<load_libraries>>

marpath = '/media/shl/Elements1/data/MARv3.12/monthly_1km/'

gdf = gpd.read_file('shp/larocca/polygon_larocca_epsg3413.shp')

melt = []
years = []
#year = 2000

unique_name_column = 'new_ID'
name = []
for id in range(len(gdf[unique_name_column])):
    name.append(gdf.iloc[id][unique_name_column])
    
snow = pd.DataFrame({'new_ID':name})
rain = pd.DataFrame({'new_ID':name})
temp = pd.DataFrame({'new_ID':name})
smb = pd.DataFrame({'new_ID':name})
runoff = pd.DataFrame({'new_ID':name})

for year in range(1950,2022):
    print('processing year: '+ str(year))
    mar_annual = marpath+'/annual/MARv3.12-annual_sum_RF_ERA5_'+str(year)+'.nc'
    variable = 'RF'
    zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = 1, all_touched = True)


    
    stats = []
    for id in range(len(zone_stat)):
        stats.append(zone_stat[id]['mean'])


    rain[str(year)] = stats

    variable = 'SF'

    mar_annual = marpath+'/annual/MARv3.12-annual_sum_SF_ERA5_'+str(year)+'.nc'
    zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = 1, all_touched = True)
    stats = []
    
    for id in range(len(zone_stat)):
        stats.append(zone_stat[id]['mean'])
    
    snow[str(year)] = stats

    variable = 'T2Mcorr'

    mar_annual = marpath+'/annual/MARv3.12-annual_mean_T2Mcorr_ERA5_'+str(year)+'.nc'
    zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = 1, all_touched = True)
    stats = []
    
    for id in range(len(zone_stat)):
        stats.append(zone_stat[id]['mean'])
    
    temp[str(year)] = stats

    variable = 'SMBcorr'

    mar_annual = marpath+'/annual/MARv3.12-annual_sum_SMBcorr_ERA5_'+str(year)+'.nc'
    zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = 1, all_touched = True)
    stats = []
    
    for id in range(len(zone_stat)):
        stats.append(zone_stat[id]['mean'])
    
    smb[str(year)] = stats

    variable = 'RUcorr'

    mar_annual = marpath+'/annual/MARv3.12-annual_sum_RUcorr_ERA5_'+str(year)+'.nc'
    zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = 1, all_touched = True)
    stats = []
    
    for id in range(len(zone_stat)):
        stats.append(zone_stat[id]['mean'])
    
    runoff[str(year)] = stats
    
snow.set_index('new_ID', inplace =True)   
rain.set_index('new_ID', inplace =True)
temp.set_index('new_ID', inplace =True)
smb.set_index('new_ID', inplace =True)
runoff.set_index('new_ID', inplace =True)

temp_out = temp.T
temp_out.index.name = 'year'
temp.to_csv('results_larocca/MARv3.12_T2Mcorr_1950_2021_catchment_mean_of_annual_mean.csv', index = True)

snow_out = snow.T
snow_out.index.name = 'year'
snow.to_csv('results_larocca/MARv3.12_SF_1950_2021_catchment_mean_of_annual_sum.csv', index = True)

rain_out = rain.T
rain_out.index.name = 'year'
rain.to_csv('results_larocca/MARv3.12_RF_1950_2021_catchment_mean_of_annual_sum.csv', index = True)

smb_out = smb.T
smb_out.index.name = 'year'
smb.to_csv('results_larocca/MARv3.12_SMBcorr_1950_2021_catchment_mean_of_annual_sum.csv', index = True)

runoff_out = runoff.T
runoff_out.index.name = 'year'
runoff.to_csv('results_larocca/MARv3.12_RUcorr_1950_2021_catchment_mean_of_annual_sum.csv', index = True)
#+END_SRC

#+RESULTS:
:results:
# Out [7]: 
# output
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
/tmp/ipykernel_5242/1004389195.py in <module>
     56 
     57     for id in range(len(zone_stat)):
---> 58         stats.append(zone_stat[id]['sum'])
     59 
     60     snow[str(year)] = stats

KeyError: 'sum'
:end:



**** Make one variable nc files to try to save time (not space)
#+BEGIN_SRC ipython :tangle make_annual_sum_files.py
<<load_libraries>>
marpath = '/media/shl/Elements1/data/MARv3.12/monthly_1km/'
for year in range(1950,2022):
    
    src_name = 'MARv3.12-monthly-ERA5-'+str(year)+'.nc'
    with xr.open_dataset(marpath+src_name,decode_times=False) as DS:
        annual = DS['RF']
        annual.to_netcdf(marpath+'/monthly_one_variable/MARv3.12-RF_ERA5_'+str(year)+'.nc')
        annual = DS['SF']
        annual.to_netcdf(marpath+'/monthly_one_variable/MARv3.12-SF_ERA5_'+str(year)+'.nc')
        annual = DS['T2Mcorr']
        annual.to_netcdf(marpath+'/monthly_one_variable/MARv3.12-T2Mcorr_ERA5_'+str(year)+'.nc')
        annual = DS['RUcorr']
        annual.to_netcdf(marpath+'/monthly_one_variable/MARv3.12-RUcorr_ERA5_'+str(year)+'.nc')
        annual = DS['SMBcorr']
        annual.to_netcdf(marpath+'/monthly_one_variable/MARv3.12-SMBcorr_ERA5_'+str(year)+'.nc')
	
#+END_SRC

#+RESULTS:
:results:
# Out [16]: 
:end:

**** Then extract monthly values for each year and all polygons

#+NAME: extract_monthly_header
#+BEGIN_SRC jupyter-python 
<<load_libraries>>

datapath = '/mnt/data/shl/data/MAR/3.12/' #'/media/shl/Elements1/data/MARv3.12/monthly_1km/'

gdf = gpd.read_file('shp/larocca/extra/west_avriel_additions_polygons_epsg3413.shp')

melt = []
years = []
#year = 2000

unique_name_column = 'RGIId'
name = []
for id in range(len(gdf[unique_name_column])):
    name.append(gdf.iloc[id][unique_name_column])
    

#+END_SRC

#+BEGIN_SRC jupyter-python :tangle extract_monthly_rain.py
<<extract_monthly_header>>
rain = pd.DataFrame({'new_ID':name})
for year in range(1950,2021+1): #2022
    for month in range(1,12+1):
    
        mar_annual = datapath+'monthly_one_variable/MARv3.12-RF_ERA5_'+str(year)+'.nc'
        print('processing year - month: '+ str(year) + ' - ' + str(month))
        variable = 'RF'
        zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = month, all_touched = True)


    
        stats = []
        for id in range(len(zone_stat)):
            stats.append(zone_stat[id]['mean'])


        rain[str(year)+'-'+str(month)] = stats

rain.set_index('new_ID', inplace =True)
#print(rain.head)
#rain_out = rain.T
#rain_out.index.name = 'year'
rain.to_csv('results_larocca/MARv3.12_RF_1950_2021_catchment_mean_of_monthly_sum.csv', index = True)
#+END_SRC
        
#+BEGIN_SRC jupyter-python :tangle extract_monthly_snow.py
<<extract_monthly_header>>
snow = pd.DataFrame({'new_ID':name})

for year in range(1950,2022): #2022
    for month in range(1,12+1):

        variable = 'SF'

        mar_annual = datapath+'monthly_one_variable/MARv3.12-SF_ERA5_'+str(year)+'.nc'
        print('processing year - month: '+ str(year) + ' - ' + str(month))
        zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = month, all_touched = True)
        stats = []
    
        for id in range(len(zone_stat)):
            stats.append(zone_stat[id]['mean'])
    
        snow[str(year)+'-'+str(month)] = stats

snow.set_index('new_ID', inplace =True)   
#snow_out = snow.T
#snow_out.index.name = 'year'
snow.to_csv('results_larocca/MARv3.12_SF_1950_2021_catchment_mean_of_monthly_sum.csv', index = True)

#+END_SRC

#+BEGIN_SRC jupyter-python :tangle extract_monthly_temp.py
<<extract_monthly_header>>
temp = pd.DataFrame({'new_ID':name})
for year in range(1950,2022): #2022
    for month in range(1,12+1):

        variable = 'T2Mcorr'

        mar_annual = datapath+'monthly_one_variable/MARv3.12-T2Mcorr_ERA5_'+str(year)+'.nc'
        print('processing year - month: '+ str(year) + ' - ' + str(month))
        zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = month, all_touched = True)
        stats = []
    
        for id in range(len(zone_stat)):
            stats.append(zone_stat[id]['mean'])
    
        temp[str(year)+'-'+str(month)] = stats

temp.set_index('new_ID', inplace =True)
#temp_out = temp.T
#temp_out.index.name = 'year'
temp.to_csv('results_larocca/MARv3.12_T2Mcorr_1950_2021_catchment_mean_of_monthly_mean.csv', index = True)

#+END_SRC

#+BEGIN_SRC jupyter-python :tangle extract_monthly_smb.py
<<extract_monthly_header>>
smb = pd.DataFrame({'new_ID':name})
for year in range(1950,2022): #2022
    for month in range(1,12+1):

        variable = 'SMBcorr'

        mar_annual = datapath+'monthly_one_variable/MARv3.12-SMBcorr_ERA5_'+str(year)+'.nc'
        print('processing year - month: '+ str(year) + ' - ' + str(month))
        zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = month, all_touched = True)
        stats = []
    
        for id in range(len(zone_stat)):
            stats.append(zone_stat[id]['mean'])
    
        smb[str(year)+'-'+str(month)] = stats

smb.set_index('new_ID', inplace =True)
#smb_out = smb.T
#smb_out.index.name = 'year'
smb.to_csv('results_larocca/MARv3.12_SMBcorr_1950_2021_catchment_mean_of_monthly_sum.csv', index = True)

#+END_SRC

#+BEGIN_SRC jupyter-python :tangle extract_monthly_runoff.py
<<extract_monthly_header>>
runoff = pd.DataFrame({'new_ID':name})	
for year in range(1950,2022): #2022
    for month in range(1,12+1):

        variable = 'RUcorr'

        mar_annual = datapath+'monthly_one_variable/MARv3.12-RUcorr_ERA5_'+str(year)+'.nc'
        print('processing year - month: '+ str(year) + ' - ' + str(month))
        zone_stat = rs.zonal_stats(vectors=gdf['geometry'],
                               raster='netcdf:'+mar_annual+':'+variable,
                               stats='mean',
                               band = month, all_touched = True)
        stats = []
    
        for id in range(len(zone_stat)):
            stats.append(zone_stat[id]['mean'])
    
        runoff[str(year)+'-'+str(month)] = stats

runoff.set_index('new_ID', inplace =True)
#runoff_out = runoff.T
#runoff_out.index.name = 'year'
runoff.to_csv('results_larocca/MARv3.12_RUcorr_1950_2021_catchment_mean_of_monthly_sum.csv', index = True)

#+END_SRC



